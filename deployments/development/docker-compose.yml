version: '3.5'

services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  iop:
    # A container that exposes an API to show its IP address
    image: orochefeuille/iop-react:1
    ports:
      - "3000:3000"
    labels:
      - "traefik.http.routers.iop.rule=Host(`iop.localhost`)"
  steamer:
    # A container that exposes an API to show its IP address
    image: orochefeuille/steamer-symfony:latest
    ports:
      - "9999:80"

  druide:
    image: express:1
    ports:
      - "4000:4000"
    container_name: druide-express

  xelor-maildev:
    image: maildev/maildev
    restart: always
    ports:
      - "1080:1080"
      - "1025:1025"
    container_name: xelor-maildev

  eniripsa-redis:
    image: redis:7
    command: redis-server
    restart: unless-stopped
    container_name: eniripsa-redis

  coffre-mysql:
    image: mysql:8.0
    volumes:
      - database:/var/lib/mysql
    restart: always
    labels:
      - traefik.enable=false
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: esgi
      MYSQL_USER: esgi
      MYSQL_PASSWORD: esgi

  enutrof-phpmyadmin:
    image: phpmyadmin
    depends_on:
      - coffre-mysql
    restart: always
    ports:
      - '8030:80'
    environment:
      PMA_HOST: coffre-mysql
      MYSQL_ROOT_PASSWORD: password

volumes:
  database:


